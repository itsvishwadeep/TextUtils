{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.febf028c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href={'/about'}>{props.aboutText}</a>\r\n          </li> */}\r\n          \r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode}  type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> Enable DarkMode</label>\r\n</div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title:PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n} \r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: 'About '\r\n\r\n};","import React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick =()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\" Convered To Uppercase\", \"success\");\r\n    }\r\n    const handleLoClick =()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\" Converted To Lowercase\", \"success\");\r\n    }\r\n    const handleOnChange =(event)=>{\r\n        // console.log(\"on Change\");\r\n        setText(event.target.value);\r\n        // props.showAlert(\" \", \"success\");\r\n    }\r\n    const handleCopy =() =>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\" Text Is Copied To Clipboard. \", \"success\");\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\"\"))\r\n        props.showAlert(\" Extra Space Are Removed.\", \"success\");\r\n    }\r\n    const handleClearClick =()=>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Is Cleared\", \"success\");\r\n    }\r\n    const [text, setText] = useState('');\r\n    // setText(\"Wisdom\");\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'black' }}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n\r\n            \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white', color:props.mode==='dark'?'white':'black'  }} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Manage Extra Space</button>\r\n    \r\n    </div>\r\n    <div className=\"container my-5\" style={{color:props.mode==='dark'?'white':'black' }}>\r\n        <h1>Your Text Summary</h1>\r\n        <p> {text.split(\" \").length} <b>Words</b>  and {text.length} <b>Characters</b></p>\r\n        <p>{ 0.008 * text.split(\" \").length } Minutes read</p>\r\n        <h2> Preview</h2>\r\n        <p>{text.length>0?text:\"Enter Something In The Textbox To Preview It Here .\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n  }\r\n\r\n  \r\n  return (\r\n    props.alert && <div\r\n      className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n      role=\"alert\"\r\n    >\r\n      <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import './App.css';\n// import About from './components/about';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');// Whether dark mode is enabled or not.\n  const [alert, setAlert] = useState(null);\n  \n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\" Dark Mode Has Been Enabled\", \"success \")\n      document.title = 'TextUtils - Dark Mode';\n\n      // setInterval(() => {\n      //   document.title = ' TextUtils Is Amazing Mode';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n    }\n    else{\n      \n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\" Light Mode Has Been Enabled\", \"success \")\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n\n\n  \n  return (\n    <>\n                        \n            {/* <Navbar title=\"Wisdom\" aboutText=\"About Wisdom\"/> */}\n            {/* <Navbar /> */}\n            {/* <Router> */}\n            <Navbar title=\"Wisdom\" mode={mode} toggleMode={toggleMode}/>\n            <Alert alert={alert}/>\n            <div className=\"container my-3\">\n              {/* <Routes>\n\n          <Route exact path=\"/about\" element={<About />}>\n            \n          </Route>\n            <Route exact path =\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode}/>}>\n            \n            </Route>\n          </Routes> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode}/>\n        \n            \n            </div>\n            {/* </Router> */}\n        </>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}